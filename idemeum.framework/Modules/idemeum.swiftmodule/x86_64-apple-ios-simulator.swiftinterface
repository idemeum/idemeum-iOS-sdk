// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.1 (swiftlang-1200.0.41 clang-1200.0.32.8)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name idemeum
import AuthenticationServices
import CommonCrypto
import Foundation
import Swift
import SystemConfiguration
import UIKit
@_exported import idemeum
@objc public class Idemeum : ObjectiveC.NSObject {
  public init(parentView: UIKit.UIViewController, clientId: Swift.String)
  public func login(completionHandler: @escaping (Swift.Bool, idemeum.OIDCToken?, idemeum.Error?) -> Swift.Void)
  public func userClaims(completionHandler: @escaping (Swift.Bool, Any?, idemeum.Error?) -> Swift.Void)
  public func isLoggedIn(completionHandler: @escaping (Swift.Bool) -> Swift.Void)
  public func logout()
  @objc deinit
  @objc override dynamic public init()
}
extension Idemeum : AuthenticationServices.ASWebAuthenticationPresentationContextProviding {
  @objc dynamic public func presentationAnchor(for session: AuthenticationServices.ASWebAuthenticationSession) -> AuthenticationServices.ASPresentationAnchor
}
@objc @_inheritsConvenienceInitializers public class OIDCToken : ObjectiveC.NSObject {
  public var accessToken: Swift.String
  public var idToken: Swift.String
  public var expires_in: Swift.Double
  @objc override dynamic public init()
  @objc deinit
}
public struct Error {
  public var errorMessage: Swift.String
  public var statuscode: Swift.Int
}
